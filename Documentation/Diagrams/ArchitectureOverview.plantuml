@startuml
!theme plain
skinparam node {
    BackgroundColor #FFFFCC
}
skinparam port {
    BackgroundColor #E6E6FA
}
skinparam artifact {
    BackgroundColor #EEE
}

artifact "Radioactive Sample" as sample

node "Semiconductor Radioactivity Detector" as detector {
    portin "Power Supply In (12V)" as power_supply_in_12v
    portin "Sensor Window" as sensor_window
    
    portout "Analog Out" as analog_output
    portout "Digital Out\n(12V Signal)" as digital_output_12v
    
    together{
    artifact "Semiconductor Sensor\n(3 x BPW34)" as sensor
    artifact "Polarization Voltage\n(4 x 12V Batteries)" as polarization_voltage
    artifact "Transimpedance Amplifier\n(OPA657U)" as transimpedance_amplifier
    artifact "Inverting Amplifier\n(OPA656U)" as inverting_amplifier
    artifact "ADC\n(LM358 as a comparator)" as adc 
    }
    ' Internal connections
    polarization_voltage -right-> sensor : "Polarization"
    sample -down-> sensor_window : "Radiation Decay"
    sensor_window -down-> sensor
    sensor -down-> transimpedance_amplifier : "Pulse of current\nwhen radiation detected"
    transimpedance_amplifier -down-> inverting_amplifier : "Amplified voltage pulse"
    inverting_amplifier -down-> adc : "Further amplified pulse"

    ' Connections to ports
    inverting_amplifier -down--> analog_output : "Provides"
    adc -down-> digital_output_12v : "Provides"
}

' External components
artifact "Hardware Data Logger" as data_logger
artifact "Oscilloscope" as oscilloscope

artifact "Microcontroller Board" as microcontroller
artifact "Low-cost Power Supply\n(15V DC)" as power_supply
artifact "Low-cost Logic Analyzer" as logic_analyzer

node "Auxiliary Board" as AuxiliaryBoard #lightblue {
    portin "Power Supply In\n(15V)" as power_supply_15v_in
    portin "Digital In\n(12V Signal)" as digital_input_12v_port

    portout "Power Supply Out (12V)" as power_supply_12v_out
    portout "Digital Out\n(3V3 Signal)" as digital_output_3v3_port

    artifact "Voltage Stabilizer" as voltage_stabilizer
    artifact "12V/3.3V Logic\nLevel Converter" as logic_converter

    power_supply_15v_in -> voltage_stabilizer 
    voltage_stabilizer -> power_supply_12v_out
    digital_output_12v -down--> digital_input_12v_port 
}

' Connections to ports
analog_output -> oscilloscope : "Analog Monitoring"
digital_output_12v --> oscilloscope : "Digital Monitoring"
digital_output_12v --> data_logger : "Data Logging"
digital_input_12v_port --> logic_converter : "12V Digital Signal"
logic_converter -> digital_output_3v3_port
digital_output_3v3_port --> microcontroller : "3V3 Digital Signal"
digital_output_3v3_port -down-> logic_analyzer
 
' Power connection
power_supply_12v_out -> power_supply_in_12v
power_supply -up-> power_supply_15v_in : "15V DC Power"

note right of voltage_stabilizer  #FFAAAA
    <b>Sensor needs</b>
    <b>ultra-low noise</b> 
    <b>power supply</b>
end note
@enduml